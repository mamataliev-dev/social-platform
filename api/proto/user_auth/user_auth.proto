syntax = "proto3";

package user_auth;

option go_package = "github.com/mamataliev-dev/social-platform/api/gen/userauthpb;userauthpb";

import "user/user.proto";
import "google/api/annotations.proto";

// AuthService handles sign-up & login.  Internal use only.
service AuthService {
  // Registers a new user and returns their profile.
  rpc Register (RegisterRequest) returns (AuthTokenResponse) {
    option (google.api.http) = {
      post: "/auth/register"
      body: "*"
    };
  }

  // Validates credentials and returns the user profile.
  rpc Login (LoginRequest) returns (AuthTokenResponse) {
    option (google.api.http) = {
      post: "/auth/login"
      body: "*"
    };
  }

  rpc Logout(RefreshTokenPayload) returns (LogoutResponse) {
    option (google.api.http) = {
      post: "/auth/logout"
      body: "*"
    };
  }

  rpc RefreshToken(RefreshTokenPayload) returns (AuthTokenResponse) {
    option (google.api.http) = {
      post: "/auth/refresh"
      body: "*"
    };
  }
}

message RegisterRequest {
  string user_name = 1;
  string email = 2;
  string password = 3;  // plain-text; service hashes internally
  string nickname = 4;
  string bio = 5;
  string avatar_url = 6;
}

message LoginRequest {
  string email = 1;
  string password = 2;  // plain-text; service verifies internally
}

message AuthTokenResponse {
  string access_token = 1;
  string refresh_token = 2;
}

message RefreshTokenPayload {
  string refresh_token = 1;
}

message LogoutResponse {
  string message = 1;
}