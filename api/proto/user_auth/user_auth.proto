syntax = "proto3";

package user_auth;

option go_package = "github.com/mamataliev-dev/social-platform/api/gen/userauthpb;userauthpb";

import "user/user.proto";
import "validate/validate.proto";
import "google/api/annotations.proto";

// AuthService handles sign-up & login.  Internal use only.
service AuthService {
  // Registers a new user and returns their profile.
  rpc Register (RegisterRequest) returns (AuthTokenResponse) {
    option (google.api.http) = {
      post: "/auth/register"
      body: "*"
    };
  }

  // Validates credentials and returns the user profile.
  rpc Login (LoginRequest) returns (AuthTokenResponse) {
    option (google.api.http) = {
      post: "/auth/login"
      body: "*"
    };
  }

  rpc Logout(RefreshTokenPayload) returns (LogoutResponse) {
    option (google.api.http) = {
      post: "/auth/logout"
      body: "*"
    };
  }

  rpc RefreshToken(RefreshTokenPayload) returns (AuthTokenResponse) {
    option (google.api.http) = {
      post: "/auth/refresh"
      body: "*"
    };
  }
}

message RegisterRequest {
  string user_name = 1 [(validate.rules).string = {
    min_len: 3,
    max_len: 30,
    pattern: "^[a-zA-Z0-9_]+$"
  }];
  string email = 2 [(validate.rules).string.email = true];
  string password = 3 [(validate.rules).string = {min_len: 6}];
  string nickname = 4 [(validate.rules).string = {
    min_len: 3,
    max_len: 30,
    pattern: "^[a-zA-Z0-9_]+$"
  }];
  string bio = 5 [(validate.rules).string = {max_len: 160}];
  string avatar_url = 6 [(validate.rules).string.uri = true];
}

message LoginRequest {
  string email = 1 [(validate.rules).string.email = true];
  string password = 2 [(validate.rules).string.min_len = 6];
}

message AuthTokenResponse {
  string access_token = 1 [(validate.rules).string = {min_len: 10}];
  string refresh_token = 2 [(validate.rules).string = {uuid: true}];
}

message RefreshTokenPayload {
  string refresh_token = 1 [(validate.rules).string.uuid = true];
}

message LogoutResponse {
  string message = 1 [(validate.rules).string = {min_len: 1}];
}