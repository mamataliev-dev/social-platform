// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: user/v1/user.proto

package userpb

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "github.com/mamataliev-dev/social-platform/api/gen/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ---------------------------------------------------------------------
// Resource definition for UserProfile
// ---------------------------------------------------------------------
type UserProfile struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The globally unique ID for this user.
	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// The user’s chosen display name.
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	// The user’s email (publicly visible only if you choose).
	Email string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	// The unique nickname by which others look you up.
	Nickname string `protobuf:"bytes,4,opt,name=nickname,proto3" json:"nickname,omitempty"`
	// Public biography.
	Bio string `protobuf:"bytes,5,opt,name=bio,proto3" json:"bio,omitempty"`
	// URL to the avatar image.
	AvatarUrl string `protobuf:"bytes,6,opt,name=avatar_url,json=avatarUrl,proto3" json:"avatar_url,omitempty"`
	// Timestamps are always OUTPUT_ONLY on a read‐only API.
	LastLogin     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=last_login,json=lastLogin,proto3" json:"last_login,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserProfile) Reset() {
	*x = UserProfile{}
	mi := &file_user_v1_user_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserProfile) ProtoMessage() {}

func (x *UserProfile) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserProfile.ProtoReflect.Descriptor instead.
func (*UserProfile) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{0}
}

func (x *UserProfile) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserProfile) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UserProfile) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserProfile) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *UserProfile) GetBio() string {
	if x != nil {
		return x.Bio
	}
	return ""
}

func (x *UserProfile) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *UserProfile) GetLastLogin() *timestamppb.Timestamp {
	if x != nil {
		return x.LastLogin
	}
	return nil
}

func (x *UserProfile) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *UserProfile) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// ---------------------------------------------------------------------
// Request messages
// ---------------------------------------------------------------------
type FetchUserProfileByNicknameRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique nickname to look up.
	Nickname      string `protobuf:"bytes,1,opt,name=nickname,proto3" json:"nickname,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FetchUserProfileByNicknameRequest) Reset() {
	*x = FetchUserProfileByNicknameRequest{}
	mi := &file_user_v1_user_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchUserProfileByNicknameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchUserProfileByNicknameRequest) ProtoMessage() {}

func (x *FetchUserProfileByNicknameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchUserProfileByNicknameRequest.ProtoReflect.Descriptor instead.
func (*FetchUserProfileByNicknameRequest) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{1}
}

func (x *FetchUserProfileByNicknameRequest) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

type FetchUserProfileByIDRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The numeric ID of the user.
	UserId        int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FetchUserProfileByIDRequest) Reset() {
	*x = FetchUserProfileByIDRequest{}
	mi := &file_user_v1_user_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchUserProfileByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchUserProfileByIDRequest) ProtoMessage() {}

func (x *FetchUserProfileByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchUserProfileByIDRequest.ProtoReflect.Descriptor instead.
func (*FetchUserProfileByIDRequest) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{2}
}

func (x *FetchUserProfileByIDRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

var File_user_v1_user_proto protoreflect.FileDescriptor

const file_user_v1_user_proto_rawDesc = "" +
	"\n" +
	"\x12user/v1/user.proto\x12\auser.v1\x1a\x1cgoogle/api/annotations.proto\x1a\x19google/api/resource.proto\x1a\x1fgoogle/api/field_behavior.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x17validate/validate.proto\x1a:third_party/protoc-gen-openapiv2/options/annotations.proto\"\xa7\x03\n" +
	"\vUserProfile\x12\x1c\n" +
	"\auser_id\x18\x01 \x01(\x03B\x03\xe0A\x03R\x06userId\x12\x1f\n" +
	"\busername\x18\x02 \x01(\tB\x03\xe0A\x03R\busername\x12\x19\n" +
	"\x05email\x18\x03 \x01(\tB\x03\xe0A\x03R\x05email\x12\x1f\n" +
	"\bnickname\x18\x04 \x01(\tB\x03\xe0A\x02R\bnickname\x12\x10\n" +
	"\x03bio\x18\x05 \x01(\tR\x03bio\x12\x1d\n" +
	"\n" +
	"avatar_url\x18\x06 \x01(\tR\tavatarUrl\x12>\n" +
	"\n" +
	"last_login\x18\a \x01(\v2\x1a.google.protobuf.TimestampB\x03\xe0A\x03R\tlastLogin\x12>\n" +
	"\n" +
	"created_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampB\x03\xe0A\x03R\tcreatedAt\x12>\n" +
	"\n" +
	"updated_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampB\x03\xe0A\x03R\tupdatedAt:,\xeaA)\x12\x12v1/users/{user_id}\x12\x13v1/users/{nickname}\"^\n" +
	"!FetchUserProfileByNicknameRequest\x129\n" +
	"\bnickname\x18\x01 \x01(\tB\x1d\xe0A\x02\xfaB\x17r\x15\x10\x03\x18\x1e2\x0f^[A-Za-z0-9_]+$R\bnickname\"B\n" +
	"\x1bFetchUserProfileByIDRequest\x12#\n" +
	"\auser_id\x18\x01 \x01(\x03B\n" +
	"\xe0A\x02\xfaB\x04\"\x02 \x00R\x06userId2\x96\x02\n" +
	"\vUserService\x12\xd6\x01\n" +
	"\x1aFetchUserProfileByNickname\x12*.user.v1.FetchUserProfileByNicknameRequest\x1a\x14.user.v1.UserProfile\"v\x92AW\n" +
	"\x04User\x12\x1cGet User Profile by Nickname\x1a1Look up a public profile via its unique nickname.\x82\xd3\xe4\x93\x02\x16\x12\x14/v1/users/{nickname}\x1a.\x92A+\x12)Public read-only access to user profiles.2\xb8\x02\n" +
	"\x13InternalUserService\x12\xf0\x01\n" +
	"\x14FetchUserProfileByID\x12$.user.v1.FetchUserProfileByIDRequest\x1a\x14.user.v1.UserProfile\"\x9b\x01\x92At\n" +
	"\x04User\n" +
	"\bInternal\x12#Fetch User Profile by ID (Internal)\x1a=Service-to-service lookup by user ID. DO NOT expose publicly.\x82\xd3\xe4\x93\x02\x1e\x12\x1c/v1/internal/users/{user_id}\x1a.\x92A+\x12)Internal-only user profile lookups by ID.B=Z;github.com/mamataliev-dev/social-platform/api/gen/v1/userpbb\x06proto3"

var (
	file_user_v1_user_proto_rawDescOnce sync.Once
	file_user_v1_user_proto_rawDescData []byte
)

func file_user_v1_user_proto_rawDescGZIP() []byte {
	file_user_v1_user_proto_rawDescOnce.Do(func() {
		file_user_v1_user_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_user_v1_user_proto_rawDesc), len(file_user_v1_user_proto_rawDesc)))
	})
	return file_user_v1_user_proto_rawDescData
}

var file_user_v1_user_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_user_v1_user_proto_goTypes = []any{
	(*UserProfile)(nil),                       // 0: user.v1.UserProfile
	(*FetchUserProfileByNicknameRequest)(nil), // 1: user.v1.FetchUserProfileByNicknameRequest
	(*FetchUserProfileByIDRequest)(nil),       // 2: user.v1.FetchUserProfileByIDRequest
	(*timestamppb.Timestamp)(nil),             // 3: google.protobuf.Timestamp
}
var file_user_v1_user_proto_depIdxs = []int32{
	3, // 0: user.v1.UserProfile.last_login:type_name -> google.protobuf.Timestamp
	3, // 1: user.v1.UserProfile.created_at:type_name -> google.protobuf.Timestamp
	3, // 2: user.v1.UserProfile.updated_at:type_name -> google.protobuf.Timestamp
	1, // 3: user.v1.UserService.FetchUserProfileByNickname:input_type -> user.v1.FetchUserProfileByNicknameRequest
	2, // 4: user.v1.InternalUserService.FetchUserProfileByID:input_type -> user.v1.FetchUserProfileByIDRequest
	0, // 5: user.v1.UserService.FetchUserProfileByNickname:output_type -> user.v1.UserProfile
	0, // 6: user.v1.InternalUserService.FetchUserProfileByID:output_type -> user.v1.UserProfile
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_user_v1_user_proto_init() }
func file_user_v1_user_proto_init() {
	if File_user_v1_user_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_user_v1_user_proto_rawDesc), len(file_user_v1_user_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_user_v1_user_proto_goTypes,
		DependencyIndexes: file_user_v1_user_proto_depIdxs,
		MessageInfos:      file_user_v1_user_proto_msgTypes,
	}.Build()
	File_user_v1_user_proto = out.File
	file_user_v1_user_proto_goTypes = nil
	file_user_v1_user_proto_depIdxs = nil
}
