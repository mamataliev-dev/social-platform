{
  "swagger": "2.0",
  "info": {
    "title": "user_auth/v1/user_auth.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "AuthService",
      "description": "Handles user registration, login, logout, and token refresh functionality."
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/auth/login": {
      "post": {
        "summary": "User Login",
        "description": "Validates credentials (via domain fetch-by-email lookup) and returns new access + refresh tokens. This RPC is the only public entry point for authentication.",
        "operationId": "AuthService_Login",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AuthTokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1LoginRequest"
            }
          }
        ],
        "tags": [
          "Auth"
        ]
      }
    },
    "/v1/auth/logout": {
      "post": {
        "summary": "User Logout",
        "description": "Invalidates the provided refresh token, logging the user out.",
        "operationId": "AuthService_Logout",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1LogoutResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1RefreshTokenPayload"
            }
          }
        ],
        "tags": [
          "Auth"
        ]
      }
    },
    "/v1/auth/refresh": {
      "post": {
        "summary": "Refresh Token",
        "description": "Refreshes access token using a valid refresh token.",
        "operationId": "AuthService_RefreshToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AuthTokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1RefreshTokenPayload"
            }
          }
        ],
        "tags": [
          "Auth"
        ]
      }
    },
    "/v1/auth/register": {
      "post": {
        "summary": "User Registration",
        "description": "Registers a new user with username, email, and password, returning new tokens.",
        "operationId": "AuthService_Register",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AuthTokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1RegisterRequest"
            }
          }
        ],
        "tags": [
          "Auth"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1AuthTokenResponse": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string",
          "description": "A newly issued access token (JWT), min length 10.",
          "readOnly": true
        },
        "refreshToken": {
          "type": "string",
          "description": "A newly issued refresh token (UUID format).",
          "readOnly": true
        }
      }
    },
    "v1LoginRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "description": "The user's email address."
        },
        "password": {
          "type": "string",
          "description": "The user's password (plain text), min length 6."
        }
      },
      "required": [
        "email",
        "password"
      ]
    },
    "v1LogoutResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "description": "Confirmation message on successful logout.",
          "readOnly": true
        }
      }
    },
    "v1RefreshTokenPayload": {
      "type": "object",
      "properties": {
        "refreshToken": {
          "type": "string",
          "description": "A valid UUID refresh token used to obtain new access tokens."
        }
      },
      "required": [
        "refreshToken"
      ]
    },
    "v1RegisterRequest": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "description": "The user's chosen username (3–30 alphanumeric or underscore characters)."
        },
        "email": {
          "type": "string",
          "description": "The user's email address."
        },
        "password": {
          "type": "string",
          "description": "The user's password (plain text), which must be at least 6 characters."
        },
        "nickname": {
          "type": "string",
          "description": "The unique nickname for public profile lookup (3–30 alphanumeric or underscore)."
        },
        "bio": {
          "type": "string",
          "description": "Public biography text (max 160 characters)."
        },
        "avatarUrl": {
          "type": "string",
          "description": "URL to the user's avatar image."
        }
      },
      "required": [
        "username",
        "email",
        "password",
        "nickname"
      ]
    }
  }
}
